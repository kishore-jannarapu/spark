version: '3'
services:
  airflow:
    build:
      context: ./airflow
    image: airflow
    container_name: airflow
    depends_on:
      - postgres
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
      - AIRFLOW__CORE__FERNET_KEY="l7u-321Ud-pqOySaAwfF8aigekbN9VWCm3GxhdoyOPk="
    logging:
      options:
        max-size: 10m
        max-file: '3'
    volumes:
      - ./dags:/usr/local/airflow/dags
      - ./data:/data
      - ./app:/usr/local/spark/app
      - ./plugins:/usr/local/airflow/plugins
      - ./data/:/usr/local/spark/resources/data
      - ./creditcard-fraud-detection:/creditcard-fraud-detection:rw
    ports:
      - '7070:8080'
    command: webserver
    healthcheck:
      test: ['CMD-SHELL', '[ -f /usr/local/airflow/airflow-webserver.pid ]']
      interval: 30s
      timeout: 30s
      retries: 3
  spark-master:
    image: spark-master:3.1.1-hadoop3.2
    container_name: spark-master
    ports:
      - '8080:8080'
      - '7077:7077'
    environment:
      - INIT_DAEMON_STEP=setup_spark
    volumes:
      #- ./app:/usr/local/spark/app
      - ./model:/creditcard-fraud-detection:rw
      - ./data/:/usr/local/spark/resources/data
  spark-worker-1:
    image: spark-worker:3.1.1-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - '8081:8081'
    environment:
      - 'SPARK_MASTER=spark://spark-master:7077'
    volumes:
      - ./data/:/usr/local/spark/resources/data
      - ./model:/creditcard-fraud-detection:rw
  # spark-app:
  #   build:
  #     context: ./jobs/
  #   #image: spark-app
  #   container_name: spark-app
  #   environment:
  #     - ENABLE_INIT_DAEMON=false
  ######################################## KAFKA #####################################
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    build:
      context: ./zookeeper
    ports:
      - '2181:2181'
  kafka:
    image: kafka
    container_name: kafka
    build:
      context: ./kafka
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      KAFKA_CREATE_TOPICS: 'creditcardTransaction:2:1'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  ######################################### Cassandra #####################################
  cassandra:
    image: cassandra:3.11
    container_name: cassandra
    ports:
      - 7000:7000
    volumes:
      - cassandraData:/var/lib/cassandra

  #####################################################################################
  postgres:
    image: postgres:9.6
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    logging:
      options:
        max-size: 10m
        max-file: '3'
volumes:
  cassandraData:
